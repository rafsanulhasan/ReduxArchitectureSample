<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <RootNamespace>ReduxArchitecture.WebUI</RootNamespace>
        <AssemblyName>ReduxArchitecture.WebUI</AssemblyName>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>true</IsPackable>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>

        <UserSecretsId>efad71c6-743c-4b87-9de8-f26d77146f6d</UserSecretsId>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <DockerfileContext>..\..</DockerfileContext>
        <DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
        <AppMode>Angular</AppMode>
    </PropertyGroup>

    <Import Project="NgApp.props" Condition=" '$(AppMode)' == 'Angular' " />
    <Import Project="ReactApp.props" Condition=" '$(AppMode)' == 'React' " />

    <ItemGroup>
        <Compile Remove="bin\**" />
        <Compile Remove="obj\**" />
        <Content Remove="bin\**" />
        <Content Remove="obj\**" />
        <EmbeddedResource Remove="bin\**" />
        <EmbeddedResource Remove="obj\**" />
        <None Remove="bin\**" />
        <None Remove="obj\**" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="FluentValidation.AspNetCore" Version="11.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="6.0.4" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.4" />
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="6.0.4" />
        <PackageReference Include="Microsoft.Extensions.FileProviders.Embedded" Version="6.0.4" />
        <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.15.1" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.4">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="NSwag.AspNetCore" Version="13.15.10" />
        <PackageReference Include="NSwag.MSBuild" Version="13.15.10">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Application\Application.csproj" />
        <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
    </ItemGroup>

    <PropertyGroup>
        <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    </PropertyGroup>

    <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' And '$(AppMode)' == 'Angular' And !Exists('$(NgSpaRoot)src\app\web-api-client.ts')">
        <Message Importance="High" Text="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
        <Exec WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
        <Delete Files="$(ProjectDir)\obj\$(MSBuildProjectFile).NSwag.targets" />
        <!-- This thingy trigger project rebuild -->
    </Target>

    <Import Project="NgApp.targets" Condition=" '$(AppMode)' == 'Angular' " />
    <Import Project="ReactApp.targets" Condition=" '$(AppMode)' == 'React' " />

</Project>
